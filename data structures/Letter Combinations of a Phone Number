public class LetterCombinationsPhoneNumber {

    Map<Character, List<Character>> numpad;

    {
        numpad = new HashMap<>();
        numpad.put('2', Arrays.asList('a','b','c'));
        numpad.put('3', Arrays.asList('d','e','f'));
        numpad.put('4', Arrays.asList('g','h','i'));
        numpad.put('5', Arrays.asList('j','k','l'));
        numpad.put('6', Arrays.asList('m','n','o'));
        numpad.put('7', Arrays.asList('p','q','r', 's'));
        numpad.put('8', Arrays.asList('t','u','v'));
        numpad.put('9', Arrays.asList('w','x','y', 'z'));
    }

    String digits;

    LetterCombinationsPhoneNumber(String digits) {
        this.digits = digits;
    }

    public void combination( int i, String str) {
        if(digits.length() == i) {
            System.out.println(str);
            return;
        }

        List<Character> list = numpad.get(digits.charAt(i));
        for(Character ch: list) {
            combination(i + 1, str + ch);
        }
    }

    public static void main(String[] args) {
        String digits = "247";
        new LetterCombinationsPhoneNumber(digits).combination(0, "");
    }
}
